name: docker-image

on:
  push:
    branches: ["main"]
    tags: ["v*"]
  workflow_dispatch:

permissions:
  contents: read
  packages: write

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: comfyui-mints   # 必須小寫

jobs:
  build_and_push_image:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # 先大量釋放 runner 硬碟空間（可釋放 20~30GB）
      - name: Maximize disk space on runner
        shell: bash
        run: |
          set -eux
          df -h
          sudo rm -rf /usr/local/lib/android       || true
          sudo rm -rf /usr/share/dotnet            || true
          sudo rm -rf /opt/ghc                     || true
          sudo rm -rf "${AGENT_TOOLSDIRECTORY:-/opt/hostedtoolcache}" || true
          sudo apt-get clean
          sudo docker system prune -af || true
          df -h

      - name: Derive lowercase owner
        id: vars
        shell: bash
        run: |
          owner="${{ github.repository_owner }}"
          echo "owner_lc=${owner,,}" >> "$GITHUB_OUTPUT"

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ steps.vars.outputs.owner_lc }}/${{ env.IMAGE_NAME }}
          tags: |
            type=raw,value=latest,enable=${{ github.ref == format('refs/heads/{0}', github.event.repository.default_branch) }}
            type=ref,event=tag
            type=match,pattern=^v(.*)$,group=1

      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile
          platforms: linux/amd64
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          provenance: false          # 關閉 SBOM/Provenance 省空間

      # 保險：結束後把 buildx 殘留快取清掉
      - name: Prune builder cache
        if: always()
        run: |
          docker buildx prune -af || true
          docker system prune -af || true
